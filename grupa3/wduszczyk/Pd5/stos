#include<iostream>
using namespace std;

class stos
{
    struct Element
    {
        Element* prev;
        float value;
    };

    Element* t;

public:
    stos();
    ~stos();

    float pop();
    float top();

    bool empty();
    void push(float);
};

//konstruktor - pusty stos
stos:: stos() {
    
}

// destruktor - usunięcie wszystkiego ze stosu
stos:: ~stos() {
 
  Element* parm = t;
    while (t != NULL){
		t = t->prev;
		delete parm;
		parm = t;
	}  
}

//Zdejmuje istniejący element ze szczytu stosu. 
float stos::pop(){
    Element* parm = t;
    float value = t -> value;
    t = t -> prev;
    delete parm;
    return value;  
}

//zwraca wartość z góry stosu
float stos::top(){
    return t->value;
}

//Sprawdza czy stos jest pusty.
bool stos::empty(){  
	return t == NULL;
}

   
//dodanie elementu na górę stosu
void stos::push(float value){
    Element* parm = new Element();
    parm -> value = value;
    if (t!=NULL) {
        parm -> prev=t;
    }
    t = parm;
}

int main()
{
    stos s;

    while (!cin.eof()) {
        string token;
        cin >> token;

        if (token == "+") {
            float l, r;

            r = s.pop();
            l = s.pop();

            s.push(l + r);
        } else if (token == "*") {
            float l, r;

            r = s.pop();
            l = s.pop();

            s.push(l * r);
        } else if (token == "=") {
            cout << s.top() << endl;
        } else {
            s.push(stof(token));
        }
    }
}
