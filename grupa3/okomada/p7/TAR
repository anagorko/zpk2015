#include<iostream>
#include <vector>
#include <cmath>
using namespace std;


long long pierwiastek(long long p, long long q)
{
	long long wynik;
	long long poczatek;
	long long koniec;
	long long x;

	
	wynik = -1;
	poczatek = 1;
	koniec = 1000000;
	
	// sprawdzamy czy nie sÄ… poprawne rozwiazania krancowe 
	x = poczatek;
	if ((x*(p + x*x)) == q)
	{
		return x;
	}

	x = koniec;
	if ((x*(p + x*x)) == q)
	{
		return x;
	}
	while (poczatek < koniec -1 )	
	{	
		x = (poczatek + koniec +1 ) / 2;
		if ((x*(p + x*x)) >= q) // na srodku mamy cos wiekszego od zera 
			// p jest naruralne wiec koniec przesuwamy na poczatek 
		{
			koniec = x;
			if ((x*(p + x*x)) == q)
			{
				wynik = x;
				break;
			}
		}
		else
			poczatek = x;
	}

	return wynik;
}

int main()
{
	int ile_zagadek;
	long long p;
	long long q;
	vector <long long> wyniki;
	
	cin >> ile_zagadek;
	for (int i = 0; i < ile_zagadek; i++)
	{
		cin >> p;
		cin >> q;
		wyniki.push_back(pierwiastek(p,q));
	}

	for (int i = 0; i<ile_zagadek; ++i)
	{
		if (wyniki[i] == -1)
			cout << "NIE" << endl;
		else
		cout << wyniki[i] << endl;
	}
}


